Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              kurs.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              kurs.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strcpy_P.o)
                              kurs.o (strcpy_P)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strlen_P.o)
                              kurs.o (strlen_P)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
                              kurs.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

values              0x80              kurs.o
tot_overflow        0x2               kurs.o
buf                 0x20              kurs.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
LOAD kurs.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x798
 *(.vectors)
 .vectors       0x00000000       0x2a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000002a       0x12 kurs.o
                0x0000003c                . = ALIGN (0x2)
                0x0000003c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000003c        0x0 linker stubs
 *(.trampolines*)
                0x0000003c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000003c                __ctors_start = .
 *(.ctors)
                0x0000003c                __ctors_end = .
                0x0000003c                __dtors_start = .
 *(.dtors)
                0x0000003c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000003c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
                0x0000003c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000003c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000048       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000048                __do_copy_data
 .init4         0x0000005e       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x0000005e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000006e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
 *(.init9)
 *(.text)
 .text          0x00000072        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
                0x00000072                __vector_12
                0x00000072                __bad_interrupt
                0x00000072                __vector_6
                0x00000072                __vector_3
                0x00000072                __vector_11
                0x00000072                __vector_13
                0x00000072                __vector_17
                0x00000072                __vector_19
                0x00000072                __vector_7
                0x00000072                __vector_5
                0x00000072                __vector_4
                0x00000072                __vector_9
                0x00000072                __vector_15
                0x00000072                __vector_8
                0x00000072                __vector_10
                0x00000072                __vector_16
                0x00000072                __vector_18
                0x00000072                __vector_20
 .text          0x00000074      0x67a kurs.o
                0x000003f8                __vector_1
                0x00000088                OFF
                0x0000038a                LCDInit
                0x00000074                ports_init
                0x000002d4                USARTTransmitBuffer
                0x000000c2                spi_init
                0x000000ee                SPIWriteByte
                0x00000094                interrupt_init
                0x00000320                LCDSend
                0x0000057e                LCDDisplayString
                0x000003dc                LCDDisplayStringT
                0x00000234                SPISaveValues
                0x00000124                SPIReadByte
                0x000002ba                uart_init
                0x000000e2                SPITransmitByte
                0x000003c2                LCDCursor
                0x000002f0                USARTReceiveChar
                0x000006da                USARTTransmitStringLN
                0x000001ac                SPIBufferAppend
                0x000002cc                USARTTransmitChar
                0x000004e8                init
                0x00000668                USARTTransmitString
                0x0000023c                SPIClear
                0x0000060a                main
                0x00000442                __vector_2
                0x000000ae                adc_init
                0x000005f2                display_legend_on_lcd
                0x000001fa                SPIBufferTransmit
                0x0000037a                LCDClear
                0x00000506                send_buf
                0x000000d8                EEPROM_Wait
                0x00000488                __vector_14
                0x00000150                SPIWritePage
                0x000002f8                key_state
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strcpy_P.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strlen_P.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .text          0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
                0x000006ee                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000006ee        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000006ee        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strcpy_P.o)
                0x000006ee                strcpy_P
 .text.avr-libc
                0x000006fc       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strlen_P.o)
                0x000006fc                strlen_P
 .text.avr-libc
                0x0000070e       0x3e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
                0x0000070e                itoa
 .text.avr-libc
                0x0000074c       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
                0x0000074c                strrev
 .text.libgcc   0x0000076c       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
                0x0000076c                __udivmodhi4
                0x00000794                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000794        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000794                exit
                0x00000794                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000794        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000798                _etext = .

.data           0x00800060       0x14 load address 0x00000798
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
 .data          0x00800060       0x13 kurs.o
                0x00800065                channel_number_str
                0x00800064                channel_number
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strcpy_P.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strlen_P.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .data          0x00800073        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800074                . = ALIGN (0x2)
 *fill*         0x00800073        0x1 00
                0x00800074                _edata = .
                0x00800074                PROVIDE (__data_end, .)

.bss            0x00800074       0xbe
                0x00800074                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8535.o
 .bss           0x00800074       0x1c kurs.o
                0x0080007d                current_voltage
                0x00800074                debug2
                0x00800076                buf_count
                0x00800079                addr
                0x0080007f                current_voltage_str
                0x0080007c                current_index
                0x00800077                buf_address
                0x0080007b                debug3
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strcpy_P.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strlen_P.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .bss           0x00800090        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800090       0xa2 kurs.o
                0x00800090                values
                0x00800110                tot_overflow
                0x00800112                buf
                0x00800132                PROVIDE (__bss_end, .)
                0x00000798                __data_load_start = LOADADDR (.data)
                0x000007ac                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800132        0x0
                0x00800132                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800132                PROVIDE (__noinit_end, .)
                0x00800132                _end = .
                0x00800132                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 kurs.o

.debug_pubnames
                0x00000000      0x314
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x314 kurs.o

.debug_info     0x00000000      0xcb4
 *(.debug_info)
 .debug_info    0x00000000      0xcb4 kurs.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x386
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x386 kurs.o

.debug_line     0x00000000      0x9c7
 *(.debug_line)
 .debug_line    0x00000000      0x9c7 kurs.o

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000      0x230 kurs.o

.debug_str      0x00000000      0x367
 *(.debug_str)
 .debug_str     0x00000000      0x367 kurs.o
                                0x3b8 (size before relaxing)

.debug_loc      0x00000000      0x387
 *(.debug_loc)
 .debug_loc     0x00000000      0x387 kurs.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(kurs.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x90
 .debug_ranges  0x00000000       0x90 kurs.o
